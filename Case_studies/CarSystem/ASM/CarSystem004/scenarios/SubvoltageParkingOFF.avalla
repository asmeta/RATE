scenario SubvoltageParkingOFF
load ../CarSystem004main.asm
// le luci, mentre sono accese non si spengono in caso di subvoltage perchè il controllo è posto prima dell'accensione
// in caso di subvoltage l'unica cosa che accade è la loro non accensione

check brakeLampRight = 0;
check corneringLightLeft = 0;
check corneringLightRight = 0;
check brakeLampCenter = 0;
check pitmanArmForthBackPrevious = NEUTRAL_FB;
check brakeLampCenterStatus = FIX;
check keyState_Previous = undef;
check brakeLampLeft = 0;
check hazardWarningSwitchOn_Runn = false;
check hazardWarningSwitchOn_Start = false;
check lightRotarySwitchPrevious = OFF;
	check pitmanArmUpDown_RunnReq = NEUTRAL_UD;
	check lowBeamRight = 0;
	check lowBeamLeft = 0;
	check parkingLightON = false;
set hazardWarningSwitchOn := false;
set darknessModeSwitchOn := false;
set brightnessSensor := 200;
set reverseGear := false;
set brakePedal := 0;
set pitmanArmForthBack := NEUTRAL_FB;
set cameraState := CAMERA_READY;
	set keyState := KEYINIGNITIONONPOSITION;
	set lightRotarySwitch := ON;
	set pitmanArmUpDown := UPWARD7;
	set currentVoltage := 65;
step
check brakeLampRight = 0;
check corneringLightLeft = 0;
check corneringLightRight = 0;
check brakeLampCenter = 0;
check pitmanArmForthBackPrevious = NEUTRAL_FB;
check brakeLampCenterStatus = FIX;
check keyState_Previous = KEYINIGNITIONONPOSITION;
check brakeLampLeft = 0;
check hazardWarningSwitchOn_Runn = false;
check hazardWarningSwitchOn_Start = false;
check lightRotarySwitchPrevious = ON;
check reverseLight = 0;
check blinkRightPulseRatio = PULSE11;
check pitmanArmUpDown_Buff = NEUTRAL_UD;
check blinkRight = 100;
	check pitmanArmUpDown_RunnReq = UPWARD7;
	check lowBeamRight = 100;
	check lowBeamLeft = 100;
	check tailLampLeftFixValue = 100;
	check tailLampRightFixValue = 100;
	check parkingLightON = false;
set hazardWarningSwitchOn := false;
set darknessModeSwitchOn := false;
set brightnessSensor := 200;
set reverseGear := false;
set brakePedal := 0;
set pitmanArmForthBack := NEUTRAL_FB;
set cameraState := CAMERA_READY;
	set keyState := NOKEYINSERTED;
	set lightRotarySwitch := ON;
	set pitmanArmUpDown := UPWARD7;
	set currentVoltage := 65;
step
check brakeLampRight = 0;
check corneringLightLeft = 0;
check corneringLightRight = 0;
check brakeLampCenter = 0;
check pitmanArmForthBackPrevious = NEUTRAL_FB;
check brakeLampCenterStatus = FIX;
check keyState_Previous = NOKEYINSERTED;
check brakeLampLeft = 0;
check hazardWarningSwitchOn_Runn = false;
check hazardWarningSwitchOn_Start = false;
check lightRotarySwitchPrevious = ON;
check reverseLight = 0;
check blinkRightPulseRatio = NOPULSE;
check pitmanArmUpDown_Buff = NEUTRAL_UD;
check blinkRight = 0;
check highBeamOn = false;
	check pitmanArmUpDown_RunnReq = NEUTRAL_UD;
	check lowBeamRight = 100;
	check lowBeamLeft = 100;
	check tailLampLeftFixValue = 100;
	check tailLampRightFixValue = 100;
	check parkingLightON = false;
set hazardWarningSwitchOn := false;
set darknessModeSwitchOn := false;
set brightnessSensor := 200;
set reverseGear := false;
set brakePedal := 0;
set pitmanArmForthBack := NEUTRAL_FB;
set cameraState := CAMERA_READY;
set currentSpeed := 0;
set steeringAngle := 500;
set passed5Sec := false;
	set keyState := NOKEYINSERTED;
	set lightRotarySwitch := ON;
	set pitmanArmUpDown := UPWARD7;
	set currentVoltage := 95;
	set passed30Sec := true;
//notiamo come nell'ultimo step, all'aumentare del voltaggio in range accettabile, le luci di parcheggio si accendano nonostante 
//le stesse condizioni precedenti a meno del voltaggio
step
check brakeLampRight = 0;
check corneringLightLeft = 0;
check corneringLightRight = 0;
check brakeLampCenter = 0;
check pitmanArmForthBackPrevious = NEUTRAL_FB;
check brakeLampCenterStatus = FIX;
check keyState_Previous = NOKEYINSERTED;
check brakeLampLeft = 0;
check hazardWarningSwitchOn_Runn = false;
check hazardWarningSwitchOn_Start = false;
check lightRotarySwitchPrevious = ON;
check reverseLight = 0;
check blinkRightPulseRatio = NOPULSE;
check pitmanArmUpDown_Buff = NEUTRAL_UD;
check blinkRight = 0;
check highBeamOn = false;
check pitmanArmUpDown_RunnReq = NEUTRAL_UD;
	check lowBeamRight = 10;
	check lowBeamLeft = 0;
	check tailLampLeftFixValue = 0;
	check tailLampRightFixValue = 10;
	check parkingLightON = true;
step

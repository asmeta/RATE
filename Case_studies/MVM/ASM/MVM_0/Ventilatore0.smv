--file ..\Case_studies\MVM\ASM\MVM_0\Ventilatore0.smv
-- options: flatten? false
MODULE main
	VAR
		expirationDurationPassed: boolean; --monitored
		flowDropPSV: boolean; --monitored
		iValve: {CLOSED, OPEN, VALVESTATUS_UNDEF}; --controlled
		inspirationDurationPassed: boolean; --monitored
		maxInspTimePSVPassed: boolean; --monitored
		minExpTimePSVPassed: boolean; --monitored
		oValve: {CLOSED, OPEN, VALVESTATUS_UNDEF}; --controlled
		respirationMode: {PCV, PSV}; --monitored
		resume: boolean; --monitored
		selfTestPassed: boolean; --monitored
		startVentilation: boolean; --monitored
		startupEnded: boolean; --monitored
		state: {MAIN_REGION_PCV_R1_EXPIRATION, MAIN_REGION_PCV_R1_EXPIRATORYPAUSE, MAIN_REGION_PCV_R1_INSPIRATION, MAIN_REGION_PCV_R1_INSPIRATORYPAUSE, MAIN_REGION_PCV_R1_RM, MAIN_REGION_PSV_R1_EXPIRATION, MAIN_REGION_PSV_R1_EXPIRATORYPAUSE, MAIN_REGION_PSV_R1_INSPIRATION, MAIN_REGION_PSV_R1_INSPIRATORYPAUSE, MAIN_REGION_PSV_R1_RM, MAIN_REGION_SELFTEST, MAIN_REGION_STARTUP, MAIN_REGION_VENTILATIONOFF, OFF, STATES_UNDEF}; --controlled
		stopRequested: boolean; --monitored
		stopVentilation: boolean; --controlled
		turnOFFbtn: boolean; --monitored
	CONSTANTS STATES_UNDEF, MAIN_REGION_PCV_R1_EXPIRATION, MAIN_REGION_PCV_R1_EXPIRATORYPAUSE, MAIN_REGION_PCV_R1_INSPIRATION, MAIN_REGION_PCV_R1_INSPIRATORYPAUSE, MAIN_REGION_PCV_R1_RM, MAIN_REGION_PSV_R1_EXPIRATION, MAIN_REGION_PSV_R1_EXPIRATORYPAUSE, MAIN_REGION_PSV_R1_INSPIRATION, MAIN_REGION_PSV_R1_INSPIRATORYPAUSE, MAIN_REGION_PSV_R1_RM, MAIN_REGION_SELFTEST, MAIN_REGION_STARTUP, MAIN_REGION_VENTILATIONOFF, OFF, VALVESTATUS_UNDEF, CLOSED, OPEN, MODES_UNDEF, PCV, PSV;
	ASSIGN
		init(iValve) := CLOSED;
		init(oValve) := OPEN;
		init(state) := MAIN_REGION_STARTUP;
		init(stopVentilation) := FALSE;
		next(iValve) :=
			case
				(((!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & (respirationMode = PSV) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & minExpTimePSVPassed & !(stopVentilation)) | (((!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & startVentilation & (state = MAIN_REGION_VENTILATIONOFF) & (respirationMode = PCV)) | (!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & startVentilation & (state = MAIN_REGION_VENTILATIONOFF) & (respirationMode = PSV) & !(respirationMode = PCV))) | (!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & expirationDurationPassed & (state = MAIN_REGION_PCV_R1_EXPIRATION) & !(stopVentilation)))) | (!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & (respirationMode = PCV) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & minExpTimePSVPassed & !(respirationMode = PSV) & !(stopVentilation))): OPEN;
				((((!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & (respirationMode = PSV) & inspirationDurationPassed & !(respirationMode = PCV)) | (turnOFFbtn | (!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & (respirationMode = PCV) & inspirationDurationPassed))) | (!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & flowDropPSV & (state = MAIN_REGION_PSV_R1_INSPIRATION))) | (!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(flowDropPSV) & maxInspTimePSVPassed & !(turnOFFbtn) & (state = MAIN_REGION_PSV_R1_INSPIRATION))): CLOSED;
				TRUE: iValve;
			esac;
		next(oValve) :=
			case
				(((!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & (respirationMode = PSV) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & minExpTimePSVPassed & !(stopVentilation)) | (((!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & startVentilation & (state = MAIN_REGION_VENTILATIONOFF) & (respirationMode = PCV)) | (!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & startVentilation & (state = MAIN_REGION_VENTILATIONOFF) & (respirationMode = PSV) & !(respirationMode = PCV))) | (!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & expirationDurationPassed & (state = MAIN_REGION_PCV_R1_EXPIRATION) & !(stopVentilation)))) | (!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & (respirationMode = PCV) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & minExpTimePSVPassed & !(respirationMode = PSV) & !(stopVentilation))): CLOSED;
				((((!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & (respirationMode = PSV) & inspirationDurationPassed & !(respirationMode = PCV)) | (turnOFFbtn | (!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & (respirationMode = PCV) & inspirationDurationPassed))) | (!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & flowDropPSV & (state = MAIN_REGION_PSV_R1_INSPIRATION))) | (!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(flowDropPSV) & maxInspTimePSVPassed & !(turnOFFbtn) & (state = MAIN_REGION_PSV_R1_INSPIRATION))): OPEN;
				TRUE: oValve;
			esac;
		next(state) :=
			case
				((!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & (respirationMode = PSV) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & minExpTimePSVPassed & !(stopVentilation)) | (!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & startVentilation & (state = MAIN_REGION_VENTILATIONOFF) & (respirationMode = PSV) & !(respirationMode = PCV))): MAIN_REGION_PSV_R1_INSPIRATION;
				(!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & startupEnded & (state = MAIN_REGION_STARTUP)): MAIN_REGION_SELFTEST;
				(((!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & startVentilation & (state = MAIN_REGION_VENTILATIONOFF) & (respirationMode = PCV)) | (!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & expirationDurationPassed & (state = MAIN_REGION_PCV_R1_EXPIRATION) & !(stopVentilation))) | (!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & (respirationMode = PCV) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & minExpTimePSVPassed & !(respirationMode = PSV) & !(stopVentilation))): MAIN_REGION_PCV_R1_INSPIRATION;
				(turnOFFbtn): OFF;
				(((!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & (respirationMode = PSV) & inspirationDurationPassed & !(respirationMode = PCV)) | (!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & flowDropPSV & (state = MAIN_REGION_PSV_R1_INSPIRATION))) | (!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(flowDropPSV) & maxInspTimePSVPassed & !(turnOFFbtn) & (state = MAIN_REGION_PSV_R1_INSPIRATION))): MAIN_REGION_PSV_R1_EXPIRATION;
				(!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & (respirationMode = PCV) & inspirationDurationPassed): MAIN_REGION_PCV_R1_EXPIRATION;
				(((!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & stopVentilation & (state = MAIN_REGION_PCV_R1_EXPIRATION)) | ((!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & (state = MAIN_REGION_SELFTEST) & (resume | selfTestPassed)) | (!(turnOFFbtn) & (stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION)))))) | (!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & stopVentilation & (state = MAIN_REGION_PSV_R1_EXPIRATION))): MAIN_REGION_VENTILATIONOFF;
				TRUE: state;
			esac;
		next(stopVentilation) :=
			case
				(!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & ((state != MAIN_REGION_VENTILATIONOFF) & ((state != MAIN_REGION_SELFTEST) & ((state != MAIN_REGION_STARTUP) & stopRequested))) & !(turnOFFbtn)): TRUE;
				(((!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & stopVentilation & (state = MAIN_REGION_PCV_R1_EXPIRATION)) | (!(turnOFFbtn) & (stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))))) | (!(stopRequested & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & !(turnOFFbtn) & stopVentilation & (state = MAIN_REGION_PSV_R1_EXPIRATION))): FALSE;
				TRUE: stopVentilation;
			esac;
--LTL properties
LTLSPEC NAME ltl0 := G(!((((respirationMode = PSV) & (stopVentilation = TRUE)) & (startVentilation = TRUE)) & X(TRUE)));

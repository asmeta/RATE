--file ..\Case_studies\MVM\ASM\MVM_0\Ventilatore0.smv
-- options: flatten? false
MODULE main
	VAR
		expirationDurationPassed: boolean; --monitored
		flowDropPSV: boolean; --monitored
		iValve: {CLOSED, OPEN, VALVESTATUS_UNDEF}; --controlled
		inspirationDurationPassed: boolean; --monitored
		maxInspTimePSVPassed: boolean; --monitored
		minExpTimePSVPassed: boolean; --monitored
		minInspTimePassed: boolean; --monitored
		mode: {PCV, PSV}; --monitored
		oValve: {CLOSED, OPEN, VALVESTATUS_UNDEF}; --controlled
		poweroff: boolean; --monitored
		resume: boolean; --monitored
		selfTestPassed: boolean; --monitored
		startVentilation: boolean; --monitored
		startupEnded: boolean; --monitored
		state: {MAIN_REGION_PCV_R1_EXPIRATION, MAIN_REGION_PCV_R1_EXPIRATORYPAUSE, MAIN_REGION_PCV_R1_INSPIRATION, MAIN_REGION_PCV_R1_INSPIRATORYPAUSE, MAIN_REGION_PCV_R1_RM, MAIN_REGION_PSV_R1_EXPIRATION, MAIN_REGION_PSV_R1_EXPIRATORYPAUSE, MAIN_REGION_PSV_R1_INSPIRATION, MAIN_REGION_PSV_R1_INSPIRATORYPAUSE, MAIN_REGION_PSV_R1_RM, MAIN_REGION_SELFTEST, MAIN_REGION_STARTUP, MAIN_REGION_VENTILATIONOFF, OFF, STATES_UNDEF}; --controlled
		stopVentilation: boolean; --monitored
		stopVentilationRequested: boolean; --controlled
	CONSTANTS MODES_UNDEF, PCV, PSV, STATES_UNDEF, MAIN_REGION_PCV_R1_EXPIRATION, MAIN_REGION_PCV_R1_EXPIRATORYPAUSE, MAIN_REGION_PCV_R1_INSPIRATION, MAIN_REGION_PCV_R1_INSPIRATORYPAUSE, MAIN_REGION_PCV_R1_RM, MAIN_REGION_PSV_R1_EXPIRATION, MAIN_REGION_PSV_R1_EXPIRATORYPAUSE, MAIN_REGION_PSV_R1_INSPIRATION, MAIN_REGION_PSV_R1_INSPIRATORYPAUSE, MAIN_REGION_PSV_R1_RM, MAIN_REGION_SELFTEST, MAIN_REGION_STARTUP, MAIN_REGION_VENTILATIONOFF, OFF, VALVESTATUS_UNDEF, CLOSED, OPEN;
	ASSIGN
		init(iValve) := CLOSED;
		init(oValve) := OPEN;
		init(state) := MAIN_REGION_STARTUP;
		init(stopVentilationRequested) := FALSE;
		next(iValve) :=
			case
				(((((startVentilation & (state = MAIN_REGION_VENTILATIONOFF) & !(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (mode = PCV)) | (startVentilation & (state = MAIN_REGION_VENTILATIONOFF) & !(mode = PCV) & !(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (mode = PSV))) | (expirationDurationPassed & !(stopVentilationRequested) & !(poweroff) & (state = MAIN_REGION_PCV_R1_EXPIRATION) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))))) | (!(stopVentilationRequested) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & minExpTimePSVPassed & !(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (mode = PSV))) | (!(stopVentilationRequested) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & minExpTimePSVPassed & !(mode = PSV) & !(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (mode = PCV))): OPEN;
				(((((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(mode = PCV) & !(poweroff) & inspirationDurationPassed & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (mode = PSV)) | (((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(poweroff) & inspirationDurationPassed & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (mode = PCV)) | poweroff)) | ((state = MAIN_REGION_PSV_R1_INSPIRATION) & !(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (flowDropPSV & minInspTimePassed))) | (maxInspTimePSVPassed & !(flowDropPSV & minInspTimePassed) & (state = MAIN_REGION_PSV_R1_INSPIRATION) & !(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))))): CLOSED;
				TRUE: iValve;
			esac;
		next(oValve) :=
			case
				(((((startVentilation & (state = MAIN_REGION_VENTILATIONOFF) & !(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (mode = PCV)) | (startVentilation & (state = MAIN_REGION_VENTILATIONOFF) & !(mode = PCV) & !(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (mode = PSV))) | (expirationDurationPassed & !(stopVentilationRequested) & !(poweroff) & (state = MAIN_REGION_PCV_R1_EXPIRATION) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))))) | (!(stopVentilationRequested) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & minExpTimePSVPassed & !(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (mode = PSV))) | (!(stopVentilationRequested) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & minExpTimePSVPassed & !(mode = PSV) & !(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (mode = PCV))): CLOSED;
				(((((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(mode = PCV) & !(poweroff) & inspirationDurationPassed & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (mode = PSV)) | (((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(poweroff) & inspirationDurationPassed & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (mode = PCV)) | poweroff)) | ((state = MAIN_REGION_PSV_R1_INSPIRATION) & !(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (flowDropPSV & minInspTimePassed))) | (maxInspTimePSVPassed & !(flowDropPSV & minInspTimePassed) & (state = MAIN_REGION_PSV_R1_INSPIRATION) & !(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))))): OPEN;
				TRUE: oValve;
			esac;
		next(state) :=
			case
				((maxInspTimePSVPassed & !(flowDropPSV & minInspTimePassed) & (state = MAIN_REGION_PSV_R1_INSPIRATION) & !(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION)))) | (((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(mode = PCV) & !(poweroff) & inspirationDurationPassed & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (mode = PSV)) | ((state = MAIN_REGION_PSV_R1_INSPIRATION) & !(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (flowDropPSV & minInspTimePassed)))): MAIN_REGION_PSV_R1_EXPIRATION;
				((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(poweroff) & inspirationDurationPassed & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (mode = PCV)): MAIN_REGION_PCV_R1_EXPIRATION;
				(startupEnded & (state = MAIN_REGION_STARTUP) & !(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION)))): MAIN_REGION_SELFTEST;
				(poweroff): OFF;
				((!(stopVentilationRequested) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & minExpTimePSVPassed & !(mode = PSV) & !(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (mode = PCV)) | ((startVentilation & (state = MAIN_REGION_VENTILATIONOFF) & !(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (mode = PCV)) | (expirationDurationPassed & !(stopVentilationRequested) & !(poweroff) & (state = MAIN_REGION_PCV_R1_EXPIRATION) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION)))))): MAIN_REGION_PCV_R1_INSPIRATION;
				((startVentilation & (state = MAIN_REGION_VENTILATIONOFF) & !(mode = PCV) & !(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (mode = PSV)) | (!(stopVentilationRequested) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & minExpTimePSVPassed & !(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (mode = PSV))): MAIN_REGION_PSV_R1_INSPIRATION;
				((stopVentilationRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION) & !(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION)))) | (((!(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & (state = MAIN_REGION_SELFTEST) & (resume | selfTestPassed)) | (!(poweroff) & (stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))))) | (stopVentilationRequested & !(poweroff) & (state = MAIN_REGION_PCV_R1_EXPIRATION) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION)))))): MAIN_REGION_VENTILATIONOFF;
				TRUE: state;
			esac;
		next(stopVentilationRequested) :=
			case
				((stopVentilationRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION) & !(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION)))) | ((!(poweroff) & (stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION)))) | (stopVentilationRequested & !(poweroff) & (state = MAIN_REGION_PCV_R1_EXPIRATION) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION)))))): FALSE;
				(!(poweroff) & !(stopVentilation & ((state = MAIN_REGION_PSV_R1_EXPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & ((((state != MAIN_REGION_STARTUP) & stopVentilation) & (state != MAIN_REGION_SELFTEST)) & (state != MAIN_REGION_VENTILATIONOFF))): TRUE;
				TRUE: stopVentilationRequested;
			esac;
--LTL properties
LTLSPEC NAME ltl0 := G(!((((stopVentilation = TRUE) & (startVentilation = TRUE)) & (stopVentilationRequested = TRUE)) & X(TRUE)));

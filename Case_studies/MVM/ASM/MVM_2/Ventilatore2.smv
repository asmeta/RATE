--file ..\Case_studies\MVM\ASM\MVM_2\Ventilatore2.smv
-- options: flatten? false
MODULE main
	VAR
		apneaAlarm: boolean; --controlled
		apneaBackupMode: boolean; --controlled
		apneaLagPassed: boolean; --monitored
		dropPAW_ITS_PCV: boolean; --monitored
		dropPAW_ITS_PSV: boolean; --monitored
		expPause: boolean; --monitored
		expirationDurationPassed: boolean; --monitored
		flowDropPSV: boolean; --monitored
		iValve: {CLOSED, OPEN, VALVESTATUS_UNDEF}; --controlled
		inPause: boolean; --monitored
		inspirationDurationPassed: boolean; --monitored
		maxExpPausePassed: boolean; --monitored
		maxInPausePassed: boolean; --monitored
		maxInspTimePSVPassed: boolean; --monitored
		maxRmTimePassed: boolean; --monitored
		minExpTimePSVPassed: boolean; --monitored
		oValve: {CLOSED, OPEN, VALVESTATUS_UNDEF}; --controlled
		pawGTMaxPinsp: boolean; --monitored
		respirationMode: {PCV, PSV}; --monitored
		resume: boolean; --monitored
		rm: boolean; --monitored
		selfTestPassed: boolean; --monitored
		startVentilation: boolean; --monitored
		startupEnded: boolean; --monitored
		state: {MAIN_REGION_PCV_R1_EXPIRATION, MAIN_REGION_PCV_R1_EXPIRATORYPAUSE, MAIN_REGION_PCV_R1_INSPIRATION, MAIN_REGION_PCV_R1_INSPIRATORYPAUSE, MAIN_REGION_PCV_R1_RM, MAIN_REGION_PSV_R1_EXPIRATION, MAIN_REGION_PSV_R1_EXPIRATORYPAUSE, MAIN_REGION_PSV_R1_INSPIRATION, MAIN_REGION_PSV_R1_INSPIRATORYPAUSE, MAIN_REGION_PSV_R1_RM, MAIN_REGION_SELFTEST, MAIN_REGION_STARTUP, MAIN_REGION_VENTILATIONOFF, OFF, STATES_UNDEF}; --controlled
		stopRequested: boolean; --monitored
		stopVentilation: boolean; --controlled
		triggerWindowDelayPassed: boolean; --monitored
		turnOFFbtn: boolean; --monitored
		turnOffApneaAlarm: boolean; --monitored
	CONSTANTS STATES_UNDEF, MAIN_REGION_PCV_R1_EXPIRATION, MAIN_REGION_PCV_R1_EXPIRATORYPAUSE, MAIN_REGION_PCV_R1_INSPIRATION, MAIN_REGION_PCV_R1_INSPIRATORYPAUSE, MAIN_REGION_PCV_R1_RM, MAIN_REGION_PSV_R1_EXPIRATION, MAIN_REGION_PSV_R1_EXPIRATORYPAUSE, MAIN_REGION_PSV_R1_INSPIRATION, MAIN_REGION_PSV_R1_INSPIRATORYPAUSE, MAIN_REGION_PSV_R1_RM, MAIN_REGION_SELFTEST, MAIN_REGION_STARTUP, MAIN_REGION_VENTILATIONOFF, OFF, MODES_UNDEF, PCV, PSV, VALVESTATUS_UNDEF, CLOSED, OPEN;
	ASSIGN
		init(apneaAlarm) := FALSE;
		init(apneaBackupMode) := FALSE;
		init(iValve) := CLOSED;
		init(oValve) := OPEN;
		init(state) := MAIN_REGION_STARTUP;
		init(stopVentilation) := FALSE;
		next(apneaAlarm) :=
			case
				((turnOffApneaAlarm & ((state = MAIN_REGION_PCV_R1_INSPIRATION) | (state = MAIN_REGION_PCV_R1_EXPIRATION))) & apneaAlarm & !(turnOFFbtn) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))): FALSE;
				(!(turnOFFbtn) & apneaLagPassed & !(triggerWindowDelayPassed) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))): TRUE;
				TRUE: apneaAlarm;
			esac;
		next(apneaBackupMode) :=
			case
				((!(turnOFFbtn) & !(expirationDurationPassed) & !(triggerWindowDelayPassed) & stopVentilation & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & (state = MAIN_REGION_PCV_R1_EXPIRATION) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))) | ((((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & !(rm) & (respirationMode = PSV) & inspirationDurationPassed & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & !(inPause)) | (((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & (respirationMode = PSV) & inspirationDurationPassed & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & rm & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & !(inPause)) | (((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & (respirationMode = PSV) & inspirationDurationPassed & inPause & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))) | (!(turnOFFbtn) & (stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)))))) | (!(turnOFFbtn) & !(expirationDurationPassed) & !(dropPAW_ITS_PCV) & stopVentilation & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & (state = MAIN_REGION_PCV_R1_EXPIRATION) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & triggerWindowDelayPassed))): FALSE;
				(!(turnOFFbtn) & apneaLagPassed & !(triggerWindowDelayPassed) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))): TRUE;
				TRUE: apneaBackupMode;
			esac;
		next(iValve) :=
			case
				((((!(turnOFFbtn) & !(apneaLagPassed) & !(triggerWindowDelayPassed) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & !(((respirationMode = PSV) & minExpTimePSVPassed) & expPause) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & ((respirationMode = PCV) & minExpTimePSVPassed) & !(stopVentilation)) | ((!(turnOFFbtn) & apneaLagPassed & !(triggerWindowDelayPassed) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))) | ((!(turnOFFbtn) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & dropPAW_ITS_PSV & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & triggerWindowDelayPassed) | (((maxExpPausePassed & !(turnOFFbtn) & (state = MAIN_REGION_PCV_R1_EXPIRATORYPAUSE) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))) | ((!(turnOFFbtn) & !(expirationDurationPassed) & dropPAW_ITS_PCV & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & (state = MAIN_REGION_PCV_R1_EXPIRATION) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & triggerWindowDelayPassed) | ((!(turnOFFbtn) & expirationDurationPassed & !(expPause) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & (state = MAIN_REGION_PCV_R1_EXPIRATION) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))) | ((!(turnOFFbtn) & startVentilation & (state = MAIN_REGION_VENTILATIONOFF) & (respirationMode = PCV) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))) | (!(turnOFFbtn) & startVentilation & (state = MAIN_REGION_VENTILATIONOFF) & (respirationMode = PSV) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(respirationMode = PCV) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))))))) | (!(turnOFFbtn) & (state = MAIN_REGION_PCV_R1_EXPIRATORYPAUSE) & !(maxExpPausePassed) & !(expPause) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))))))) | (maxExpPausePassed & !(turnOFFbtn) & (state = MAIN_REGION_PSV_R1_EXPIRATORYPAUSE) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)))) | (!(turnOFFbtn) & !(maxExpPausePassed) & !(expPause) & (state = MAIN_REGION_PSV_R1_EXPIRATORYPAUSE) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)))): OPEN;
				((!(turnOFFbtn) & (maxRmTimePassed | rm) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & (state = MAIN_REGION_PSV_R1_RM)) | (((!(turnOFFbtn) & !(rm) & (state = MAIN_REGION_PSV_R1_INSPIRATION) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & (maxInspTimePSVPassed | flowDropPSV) & !(inPause)) | (((((((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & inspirationDurationPassed & inPause & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(respirationMode = PSV) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))) | (((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & !(rm) & (respirationMode = PSV) & inspirationDurationPassed & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & !(inPause)) | (((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & (respirationMode = PSV) & inspirationDurationPassed & inPause & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))) | turnOFFbtn))) | ((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & !(rm) & inspirationDurationPassed & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(respirationMode = PSV) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & !(inPause))) | ((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & pawGTMaxPinsp & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & !(inspirationDurationPassed))) | (!(turnOFFbtn) & (state = MAIN_REGION_PCV_R1_RM) & (maxRmTimePassed | rm) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)))) | (!(turnOFFbtn) & (state = MAIN_REGION_PSV_R1_INSPIRATION) & inPause & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & (maxInspTimePSVPassed | flowDropPSV)))) | (!(turnOFFbtn) & !(maxInspTimePSVPassed | flowDropPSV) & (state = MAIN_REGION_PSV_R1_INSPIRATION) & pawGTMaxPinsp & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))))): CLOSED;
				TRUE: iValve;
			esac;
		next(oValve) :=
			case
				((!(turnOFFbtn) & !(apneaLagPassed) & !(triggerWindowDelayPassed) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & !(((respirationMode = PSV) & minExpTimePSVPassed) & expPause) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & ((respirationMode = PCV) & minExpTimePSVPassed) & !(stopVentilation)) | (((((!(turnOFFbtn) & !(expirationDurationPassed) & dropPAW_ITS_PCV & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & (state = MAIN_REGION_PCV_R1_EXPIRATION) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & triggerWindowDelayPassed) | ((!(turnOFFbtn) & expirationDurationPassed & !(expPause) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & (state = MAIN_REGION_PCV_R1_EXPIRATION) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))) | (((!(turnOFFbtn) & startVentilation & (state = MAIN_REGION_VENTILATIONOFF) & (respirationMode = PCV) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))) | (!(turnOFFbtn) & startVentilation & (state = MAIN_REGION_VENTILATIONOFF) & (respirationMode = PSV) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(respirationMode = PCV) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)))) | (!(turnOFFbtn) & expirationDurationPassed & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & (state = MAIN_REGION_PCV_R1_EXPIRATION) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & expPause)))) | (!(turnOFFbtn) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & dropPAW_ITS_PSV & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & triggerWindowDelayPassed)) | (!(turnOFFbtn) & apneaLagPassed & !(triggerWindowDelayPassed) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)))) | (!(turnOFFbtn) & !(apneaLagPassed) & !(triggerWindowDelayPassed) & (((respirationMode = PSV) & minExpTimePSVPassed) & expPause) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))))): CLOSED;
				((!(turnOFFbtn) & (maxRmTimePassed | rm) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & (state = MAIN_REGION_PSV_R1_RM)) | ((!(turnOFFbtn) & (state = MAIN_REGION_PSV_R1_INSPIRATORYPAUSE) & !(maxInPausePassed) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & !(inPause)) | ((((((!(turnOFFbtn) & !(maxInPausePassed) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & !(inPause) & (state = MAIN_REGION_PCV_R1_INSPIRATORYPAUSE)) | ((!(turnOFFbtn) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & maxInPausePassed & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & (state = MAIN_REGION_PCV_R1_INSPIRATORYPAUSE)) | (((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & pawGTMaxPinsp & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & !(inspirationDurationPassed)) | ((((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & !(rm) & (respirationMode = PSV) & inspirationDurationPassed & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & !(inPause)) | turnOFFbtn) | ((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & !(rm) & inspirationDurationPassed & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(respirationMode = PSV) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & !(inPause)))))) | (!(turnOFFbtn) & (state = MAIN_REGION_PCV_R1_RM) & (maxRmTimePassed | rm) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)))) | (!(turnOFFbtn) & !(rm) & (state = MAIN_REGION_PSV_R1_INSPIRATION) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & (maxInspTimePSVPassed | flowDropPSV) & !(inPause))) | (!(turnOFFbtn) & !(maxInspTimePSVPassed | flowDropPSV) & (state = MAIN_REGION_PSV_R1_INSPIRATION) & pawGTMaxPinsp & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)))) | (!(turnOFFbtn) & (state = MAIN_REGION_PSV_R1_INSPIRATORYPAUSE) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & maxInPausePassed & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)))))): OPEN;
				TRUE: oValve;
			esac;
		next(state) :=
			case
				(!(turnOFFbtn) & startupEnded & (state = MAIN_REGION_STARTUP) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))): MAIN_REGION_SELFTEST;
				((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & inspirationDurationPassed & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(respirationMode = PSV) & rm & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & !(inPause)): MAIN_REGION_PCV_R1_RM;
				(!(turnOFFbtn) & expirationDurationPassed & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & (state = MAIN_REGION_PCV_R1_EXPIRATION) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & expPause): MAIN_REGION_PCV_R1_EXPIRATORYPAUSE;
				(((((((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & !(rm) & (respirationMode = PSV) & inspirationDurationPassed & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & !(inPause)) | (!(turnOFFbtn) & !(rm) & (state = MAIN_REGION_PSV_R1_INSPIRATION) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & (maxInspTimePSVPassed | flowDropPSV) & !(inPause))) | (!(turnOFFbtn) & !(maxInspTimePSVPassed | flowDropPSV) & (state = MAIN_REGION_PSV_R1_INSPIRATION) & pawGTMaxPinsp & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)))) | (!(turnOFFbtn) & (state = MAIN_REGION_PSV_R1_INSPIRATORYPAUSE) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & maxInPausePassed & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)))) | (!(turnOFFbtn) & (state = MAIN_REGION_PSV_R1_INSPIRATORYPAUSE) & !(maxInPausePassed) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & !(inPause))) | (!(turnOFFbtn) & (maxRmTimePassed | rm) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & (state = MAIN_REGION_PSV_R1_RM))): MAIN_REGION_PSV_R1_EXPIRATION;
				(((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & (respirationMode = PSV) & inspirationDurationPassed & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & rm & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & !(inPause)) | (!(turnOFFbtn) & (state = MAIN_REGION_PSV_R1_INSPIRATION) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & rm & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & (maxInspTimePSVPassed | flowDropPSV) & !(inPause))): MAIN_REGION_PSV_R1_RM;
				(turnOFFbtn): OFF;
				(((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & (respirationMode = PSV) & inspirationDurationPassed & inPause & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))) | (!(turnOFFbtn) & (state = MAIN_REGION_PSV_R1_INSPIRATION) & inPause & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & (maxInspTimePSVPassed | flowDropPSV))): MAIN_REGION_PSV_R1_INSPIRATORYPAUSE;
				((!(turnOFFbtn) & !(apneaLagPassed) & !(triggerWindowDelayPassed) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & !(((respirationMode = PSV) & minExpTimePSVPassed) & expPause) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & ((respirationMode = PCV) & minExpTimePSVPassed) & !(stopVentilation)) | ((((maxExpPausePassed & !(turnOFFbtn) & (state = MAIN_REGION_PCV_R1_EXPIRATORYPAUSE) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))) | ((!(turnOFFbtn) & !(expirationDurationPassed) & dropPAW_ITS_PCV & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & (state = MAIN_REGION_PCV_R1_EXPIRATION) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & triggerWindowDelayPassed) | ((!(turnOFFbtn) & expirationDurationPassed & !(expPause) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & (state = MAIN_REGION_PCV_R1_EXPIRATION) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))) | (!(turnOFFbtn) & startVentilation & (state = MAIN_REGION_VENTILATIONOFF) & (respirationMode = PCV) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)))))) | (!(turnOFFbtn) & (state = MAIN_REGION_PCV_R1_EXPIRATORYPAUSE) & !(maxExpPausePassed) & !(expPause) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)))) | (!(turnOFFbtn) & apneaLagPassed & !(triggerWindowDelayPassed) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))))): MAIN_REGION_PCV_R1_INSPIRATION;
				(((maxExpPausePassed & !(turnOFFbtn) & (state = MAIN_REGION_PSV_R1_EXPIRATORYPAUSE) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))) | ((!(turnOFFbtn) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & dropPAW_ITS_PSV & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & triggerWindowDelayPassed) | (!(turnOFFbtn) & startVentilation & (state = MAIN_REGION_VENTILATIONOFF) & (respirationMode = PSV) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(respirationMode = PCV) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))))) | (!(turnOFFbtn) & !(maxExpPausePassed) & !(expPause) & (state = MAIN_REGION_PSV_R1_EXPIRATORYPAUSE) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)))): MAIN_REGION_PSV_R1_INSPIRATION;
				(!(turnOFFbtn) & !(apneaLagPassed) & !(triggerWindowDelayPassed) & (((respirationMode = PSV) & minExpTimePSVPassed) & expPause) & (state = MAIN_REGION_PSV_R1_EXPIRATION) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))): MAIN_REGION_PSV_R1_EXPIRATORYPAUSE;
				((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & inspirationDurationPassed & inPause & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(respirationMode = PSV) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))): MAIN_REGION_PCV_R1_INSPIRATORYPAUSE;
				((!(turnOFFbtn) & (state = MAIN_REGION_PCV_R1_RM) & (maxRmTimePassed | rm) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))) | ((!(turnOFFbtn) & !(maxInPausePassed) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & !(inPause) & (state = MAIN_REGION_PCV_R1_INSPIRATORYPAUSE)) | ((!(turnOFFbtn) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & maxInPausePassed & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & (state = MAIN_REGION_PCV_R1_INSPIRATORYPAUSE)) | (((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & pawGTMaxPinsp & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & !(inspirationDurationPassed)) | ((state = MAIN_REGION_PCV_R1_INSPIRATION) & !(turnOFFbtn) & !(rm) & inspirationDurationPassed & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(respirationMode = PSV) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & !(inPause)))))): MAIN_REGION_PCV_R1_EXPIRATION;
				(((!(turnOFFbtn) & !(expirationDurationPassed) & !(triggerWindowDelayPassed) & stopVentilation & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & (state = MAIN_REGION_PCV_R1_EXPIRATION) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))) | ((!(turnOFFbtn) & !(expirationDurationPassed) & !(dropPAW_ITS_PCV) & stopVentilation & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & (state = MAIN_REGION_PCV_R1_EXPIRATION) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & triggerWindowDelayPassed) | ((!(turnOFFbtn) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & (state = MAIN_REGION_SELFTEST) & (resume | selfTestPassed) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))) | ((!(turnOFFbtn) & (stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))) | (!(turnOFFbtn) & (stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))))))) | (!(turnOFFbtn) & !(apneaLagPassed) & !(triggerWindowDelayPassed) & stopVentilation & (state = MAIN_REGION_PSV_R1_EXPIRATION) & !(((respirationMode = PSV) & minExpTimePSVPassed) & expPause) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)))): MAIN_REGION_VENTILATIONOFF;
				TRUE: state;
			esac;
		next(stopVentilation) :=
			case
				(((state != MAIN_REGION_VENTILATIONOFF) & ((state != MAIN_REGION_SELFTEST) & ((state != MAIN_REGION_STARTUP) & stopRequested))) & !(turnOFFbtn) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))): TRUE;
				((!(turnOFFbtn) & !(apneaLagPassed) & !(triggerWindowDelayPassed) & stopVentilation & (state = MAIN_REGION_PSV_R1_EXPIRATION) & !(((respirationMode = PSV) & minExpTimePSVPassed) & expPause) & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))) | ((!(turnOFFbtn) & !(expirationDurationPassed) & !(triggerWindowDelayPassed) & stopVentilation & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & (state = MAIN_REGION_PCV_R1_EXPIRATION) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))) | ((!(turnOFFbtn) & !(expirationDurationPassed) & !(dropPAW_ITS_PCV) & stopVentilation & !(stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & (state = MAIN_REGION_PCV_R1_EXPIRATION) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION)) & triggerWindowDelayPassed) | ((!(turnOFFbtn) & (stopRequested & (state = MAIN_REGION_PSV_R1_EXPIRATION)) & !(stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))) | (!(turnOFFbtn) & (stopRequested & (state = MAIN_REGION_PCV_R1_EXPIRATION))))))): FALSE;
				TRUE: stopVentilation;
			esac;
--LTL properties
LTLSPEC NAME ltl0 := G(!((((apneaAlarm = TRUE) & (startupEnded = TRUE)) & (selfTestPassed = TRUE)) & X(TRUE)));

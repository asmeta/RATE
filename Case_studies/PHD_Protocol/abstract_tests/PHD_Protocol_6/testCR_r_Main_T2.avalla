scenario testCR_r_Main_T2

load ./..\..\ASM\PHD_Protocol_6\phd_master_flat2_v6.asm

//// test name test@CR_r_Main_T2
//// generated for (test goal): CR_r_Main_T2: (status = WAITING_FOR_CONFIG) and (((((((((((transition = REQ_ASSOC_REL) and ((status != DISASSOCIATING) or (message != MSG_RX_RLRQ))) or ((transition = REQ_ASSOC_ABORT) and ((status != UNASSOCIATED) or (message != MSG_RX_ABRT)))) or ((transition = RX_AARQ) and ((status != UNASSOCIATED) or (message != MSG_RX_ABRT)))) or ((transition = RX_AARE) and ((status != UNASSOCIATED) or (message != MSG_RX_ABRT)))) or ((transition = RX_RLRQ) and ((status != UNASSOCIATED) or (message != MSG_RX_RLRE)))) or ((transition = RX_RLRE) and ((status != UNASSOCIATED) or (message != MSG_RX_ABRT)))) or ((transition = RX_ABRT) and ((status != UNASSOCIATED) or (message != MSG_NO_RESPONSE)))) or ((transition = RX_ROIV_CONFIRMED_EVENT_REPORT) and ((status != CHECKING_CONFIG) or (message != MSG_NO_RESPONSE)))) or ((transition = RX_ROIV) and ((status != WAITING_FOR_CONFIG) or (message != MSG_RX_PRST)))) or (((((((((((((((not(transition = REQ_ASSOC_REL) and not(transition = REQ_ASSOC_ABORT)) and not(transition = RX_AARQ)) and not(transition = RX_AARE)) and not(transition = RX_RLRQ)) and not(transition = RX_RLRE)) and not(transition = RX_ABRT)) and not(transition = RX_ROIV_CONFIRMED_EVENT_REPORT)) and not(transition = RX_ROIV)) and not(transition = RX_ROER)) and not(transition = RX_RORJ)) and not(transition = RX_RORS)) and not(transition = RX_RORS_GET)) and not(transition = RX_RORS_CONFIRMED_SET)) and not(transition = RX_RORS_CONFIRMED_ACTION)) and ((status != UNASSOCIATED) or (message != MSG_RX_ABRT))))
check message = undef;
check status = UNASSOCIATED;
set invokeIdValid := true;
set transition := RX_ABRT;
step
check message = MSG_NO_RESPONSE;
check status = UNASSOCIATED;
set invokeIdValid := true;
set transition := RX_AARQ_ACCEPTABLE_AND_UNKNOWN_CONFIGURATION;
step
check message = MSG_RX_AARE;
check status = WAITING_FOR_CONFIG;
set invokeIdValid := true;
set transition := RX_ABRT;
step
check message = MSG_NO_RESPONSE;
check status = UNASSOCIATED;
set invokeIdValid := true;
set transition := RX_ROER;
step

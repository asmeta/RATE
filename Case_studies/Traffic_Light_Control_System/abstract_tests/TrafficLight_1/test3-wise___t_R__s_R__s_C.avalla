scenario test3-wise___t_R__s_R__s_C

load ./..\..\ASM\TrafficLight_1\TrafficLight_1.asm

//// test name test@3-wise___t_R__s_R__s_C
//// generated for (test goal): [transitionA, statusCOperate, statusC]-->[RELEASE_PERIOD, RELEASE_A, CONTR_OFF]
check statusC = CONTR_OFF;
check statusCOperate = BLOCKED_A;
check statusA = OFF;
check statusB = OFF;
set transitionC := TURN_ON;
set transitionA := PREPARE_PERIOD;
step
check statusC = STANDBY;
check statusCOperate = BLOCKED_A;
check statusA = ATTENTION;
check statusB = ATTENTION;
set transitionC := OPERATE_T;
set transitionA := PREPARE_PERIOD;
step
check statusC = OPERATE;
check statusCOperate = BLOCKED_A;
check statusA = BLOCKED;
check statusB = BLOCKED;
set transitionC := SAFE_PERIOD;
set transitionA := PREPARE_PERIOD;
step
check statusC = OPERATE;
check statusCOperate = RELEASE_A;
check statusA = RELEASED;
check statusB = BLOCKED;
set transitionC := STANDBY_T;
set transitionA := PREPARE_PERIOD;
step
check statusC = STANDBY;
check statusCOperate = RELEASE_A;
check statusA = ATTENTION;
check statusB = ATTENTION;
set transitionC := TURN_OFF;
set transitionA := PREPARE_PERIOD;
step
check statusC = CONTR_OFF;
check statusCOperate = RELEASE_A;
check statusA = OFF;
check statusB = OFF;
set transitionC := OPERATE_T;
set transitionA := RELEASE_PERIOD;
step
check statusC = CONTR_OFF;
check statusCOperate = RELEASE_A;
check statusA = OFF;
check statusB = OFF;
set transitionA := PREPARE_PERIOD;
set transitionC := OPERATE_T;
step
